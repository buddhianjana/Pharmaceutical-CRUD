//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPC_soc.ServiceReference {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.WebServiceSoap")]
    public interface WebServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registersupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registersupplier(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registersupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registersupplierAsync(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addtender", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addtender(string name, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addtender", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addtenderAsync(string name, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registermanager", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registermanager(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registermanager", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registermanagerAsync(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerstaff", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string registerstaff(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/registerstaff", ReplyAction="*")]
        System.Threading.Tasks.Task<string> registerstaffAsync(string name, string email, string password, string cpassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addstock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string addstock(string name, string sname, int qtn, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/addstock", ReplyAction="*")]
        System.Threading.Tasks.Task<string> addstockAsync(string name, string sname, int qtn, int price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SPC_soc.ServiceReference.Tender[] GetTenders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTenders", ReplyAction="*")]
        System.Threading.Tasks.Task<SPC_soc.ServiceReference.Tender[]> GetTendersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Search", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Search(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Search", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> SearchAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatestock", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool updatestock(string name, int qtn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updatestock", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> updatestockAsync(string name, int qtn);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Tender : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string nameField;
        
        private string dateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("date");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebServiceSoapChannel : SPC_soc.ServiceReference.WebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebServiceSoapClient : System.ServiceModel.ClientBase<SPC_soc.ServiceReference.WebServiceSoap>, SPC_soc.ServiceReference.WebServiceSoap {
        
        public WebServiceSoapClient() {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string registersupplier(string name, string email, string password, string cpassword) {
            return base.Channel.registersupplier(name, email, password, cpassword);
        }
        
        public System.Threading.Tasks.Task<string> registersupplierAsync(string name, string email, string password, string cpassword) {
            return base.Channel.registersupplierAsync(name, email, password, cpassword);
        }
        
        public string addtender(string name, string date) {
            return base.Channel.addtender(name, date);
        }
        
        public System.Threading.Tasks.Task<string> addtenderAsync(string name, string date) {
            return base.Channel.addtenderAsync(name, date);
        }
        
        public string registermanager(string name, string email, string password, string cpassword) {
            return base.Channel.registermanager(name, email, password, cpassword);
        }
        
        public System.Threading.Tasks.Task<string> registermanagerAsync(string name, string email, string password, string cpassword) {
            return base.Channel.registermanagerAsync(name, email, password, cpassword);
        }
        
        public string registerstaff(string name, string email, string password, string cpassword) {
            return base.Channel.registerstaff(name, email, password, cpassword);
        }
        
        public System.Threading.Tasks.Task<string> registerstaffAsync(string name, string email, string password, string cpassword) {
            return base.Channel.registerstaffAsync(name, email, password, cpassword);
        }
        
        public string addstock(string name, string sname, int qtn, int price) {
            return base.Channel.addstock(name, sname, qtn, price);
        }
        
        public System.Threading.Tasks.Task<string> addstockAsync(string name, string sname, int qtn, int price) {
            return base.Channel.addstockAsync(name, sname, qtn, price);
        }
        
        public SPC_soc.ServiceReference.Tender[] GetTenders() {
            return base.Channel.GetTenders();
        }
        
        public System.Threading.Tasks.Task<SPC_soc.ServiceReference.Tender[]> GetTendersAsync() {
            return base.Channel.GetTendersAsync();
        }
        
        public System.Data.DataSet Search(string name) {
            return base.Channel.Search(name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> SearchAsync(string name) {
            return base.Channel.SearchAsync(name);
        }
        
        public bool updatestock(string name, int qtn) {
            return base.Channel.updatestock(name, qtn);
        }
        
        public System.Threading.Tasks.Task<bool> updatestockAsync(string name, int qtn) {
            return base.Channel.updatestockAsync(name, qtn);
        }
    }
}
